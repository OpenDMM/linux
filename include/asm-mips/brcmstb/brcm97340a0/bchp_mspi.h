/***************************************************************************
 *     Copyright (c) 1999-2009, Broadcom Corporation
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 *
 * Module Description:
 *                     DO NOT EDIT THIS FILE DIRECTLY
 *
 * This module was generated magically with RDB from a source description
 * file. You must edit the source file for changes to be made to this file.
 *
 *
 * Date:           Generated on         Fri Mar 20 13:09:05 2009
 *                 MD5 Checksum         4f0509cfa0b8fc4589050694b4a3e234
 *
 * Compiled with:  RDB Utility          combo_header.pl
 *                 RDB Parser           3.0
 *                 unknown              unknown
 *                 Perl Interpreter     5.008008
 *                 Operating System     linux
 *
 * Revision History:
 *
 * $brcm_Log: /magnum/basemodules/chp/7340/rdb/a0/bchp_mspi.h $
 * 
 * Hydra_Software_Devel/1   3/22/09 8:56p yuxiaz
 * PR53430: Initial version of header files.
 *
 ***************************************************************************/

#ifndef BCHP_MSPI_H__
#define BCHP_MSPI_H__

/***************************************************************************
 *MSPI - Master SPI
 ***************************************************************************/
#define BCHP_MSPI_SPCR0_LSB                      0x00406400 /* SPCR0_LSB REGISTER */
#define BCHP_MSPI_SPCR0_MSB                      0x00406404 /* SPCR0_MSB Register */
#define BCHP_MSPI_SPCR1_LSB                      0x00406408 /* SPCR1_LSB REGISTER */
#define BCHP_MSPI_SPCR1_MSB                      0x0040640c /* SPCR1_MSB REGISTER */
#define BCHP_MSPI_NEWQP                          0x00406410 /* NEWQP REGISTER */
#define BCHP_MSPI_ENDQP                          0x00406414 /* ENDQP REGISTER */
#define BCHP_MSPI_SPCR2                          0x00406418 /* SPCR2 REGISTER */
#define BCHP_MSPI_MSPI_STATUS                    0x00406420 /* MSPI STATUS REGISTER */
#define BCHP_MSPI_CPTQP                          0x00406424 /* CPTQP REGISTER */
#define BCHP_MSPI_TXRAM00                        0x00406440 /* MSbyte for bit 16 or bit 8 operation (queue pointer = 0) */
#define BCHP_MSPI_TXRAM01                        0x00406444 /* LSbyte for bit 16 operation only (queue pointer = 0) */
#define BCHP_MSPI_TXRAM02                        0x00406448 /* MSbyte for bit 16 or bit 8 operation (queue pointer = 1) */
#define BCHP_MSPI_TXRAM03                        0x0040644c /* LSbyte for bit 16 operation only (queue pointer = 1) */
#define BCHP_MSPI_TXRAM04                        0x00406450 /* MSbyte for bit 16 or bit 8 operation (queue pointer = 2) */
#define BCHP_MSPI_TXRAM05                        0x00406454 /* LSbyte for bit 16 operation only (queue pointer = 2) */
#define BCHP_MSPI_TXRAM06                        0x00406458 /* MSbyte for bit 16 or bit 8 operation (queue pointer = 3) */
#define BCHP_MSPI_TXRAM07                        0x0040645c /* LSbyte for bit 16 operation only (queue pointer = 3) */
#define BCHP_MSPI_TXRAM08                        0x00406460 /* MSbyte for bit 16 or bit 8 operation (queue pointer = 4) */
#define BCHP_MSPI_TXRAM09                        0x00406464 /* LSbyte for bit 16 operation only (queue pointer = 4) */
#define BCHP_MSPI_TXRAM10                        0x00406468 /* MSbyte for bit 16 or bit 8 operation (queue pointer = 5) */
#define BCHP_MSPI_TXRAM11                        0x0040646c /* LSbyte for bit 16 operation only (queue pointer = 5) */
#define BCHP_MSPI_TXRAM12                        0x00406470 /* MSbyte for bit 16 or bit 8 operation (queue pointer = 6) */
#define BCHP_MSPI_TXRAM13                        0x00406474 /* LSbyte for bit 16 operation only (queue pointer = 6) */
#define BCHP_MSPI_TXRAM14                        0x00406478 /* MSbyte for bit 16 or bit 8 operation (queue pointer = 7) */
#define BCHP_MSPI_TXRAM15                        0x0040647c /* LSbyte for bit 16 operation only (queue pointer = 7) */
#define BCHP_MSPI_TXRAM16                        0x00406480 /* MSbyte for bit 16 or bit 8 operation (queue pointer = 8) */
#define BCHP_MSPI_TXRAM17                        0x00406484 /* LSbyte for bit 16 operation only (queue pointer = 8) */
#define BCHP_MSPI_TXRAM18                        0x00406488 /* MSbyte for bit 16 or bit 8 operation (queue pointer = 9) */
#define BCHP_MSPI_TXRAM19                        0x0040648c /* LSbyte for bit 16 operation only (queue pointer = 9) */
#define BCHP_MSPI_TXRAM20                        0x00406490 /* MSbyte for bit 16 or bit 8 operation (queue pointer = a) */
#define BCHP_MSPI_TXRAM21                        0x00406494 /* LSbyte for bit 16 operation only (queue pointer = a) */
#define BCHP_MSPI_TXRAM22                        0x00406498 /* MSbyte for bit 16 or bit 8 operation (queue pointer = b) */
#define BCHP_MSPI_TXRAM23                        0x0040649c /* LSbyte for bit 16 operation only (queue pointer = b) */
#define BCHP_MSPI_TXRAM24                        0x004064a0 /* MSbyte for bit 16 or bit 8 operation (queue pointer = c) */
#define BCHP_MSPI_TXRAM25                        0x004064a4 /* LSbyte for bit 16 operation only (queue pointer = c) */
#define BCHP_MSPI_TXRAM26                        0x004064a8 /* MSbyte for bit 16 or bit 8 operation (queue pointer = d) */
#define BCHP_MSPI_TXRAM27                        0x004064ac /* LSbyte for bit 16 operation only (queue pointer = d) */
#define BCHP_MSPI_TXRAM28                        0x004064b0 /* MSbyte for bit 16 or bit 8 operation (queue pointer = e) */
#define BCHP_MSPI_TXRAM29                        0x004064b4 /* LSbyte for bit 16 operation only (queue pointer = e) */
#define BCHP_MSPI_TXRAM30                        0x004064b8 /* MSbyte for bit 16 or bit 8 operation (queue pointer = f) */
#define BCHP_MSPI_TXRAM31                        0x004064bc /* LSbyte for bit 16 operation only (queue pointer = f) */
#define BCHP_MSPI_RXRAM00                        0x004064c0 /* MSbyte for bit 16 or bit 8 operation (queue pointer = 0) */
#define BCHP_MSPI_RXRAM01                        0x004064c4 /* LSbyte for bit 16 operation only (queue pointer = 0) */
#define BCHP_MSPI_RXRAM02                        0x004064c8 /* MSbyte for bit 16 or bit 8 operation (queue pointer = 1) */
#define BCHP_MSPI_RXRAM03                        0x004064cc /* LSbyte for bit 16 operation only (queue pointer = 1) */
#define BCHP_MSPI_RXRAM04                        0x004064d0 /* MSbyte for bit 16 or bit 8 operation (queue pointer = 2) */
#define BCHP_MSPI_RXRAM05                        0x004064d4 /* LSbyte for bit 16 operation only (queue pointer = 2) */
#define BCHP_MSPI_RXRAM06                        0x004064d8 /* MSbyte for bit 16 or bit 8 operation (queue pointer = 3) */
#define BCHP_MSPI_RXRAM07                        0x004064dc /* LSbyte for bit 16 operation only (queue pointer = 3) */
#define BCHP_MSPI_RXRAM08                        0x004064e0 /* MSbyte for bit 16 or bit 8 operation (queue pointer = 4) */
#define BCHP_MSPI_RXRAM09                        0x004064e4 /* LSbyte for bit 16 operation only (queue pointer = 4) */
#define BCHP_MSPI_RXRAM10                        0x004064e8 /* MSbyte for bit 16 or bit 8 operation (queue pointer = 5) */
#define BCHP_MSPI_RXRAM11                        0x004064ec /* LSbyte for bit 16 operation only (queue pointer = 5) */
#define BCHP_MSPI_RXRAM12                        0x004064f0 /* MSbyte for bit 16 or bit 8 operation (queue pointer = 6) */
#define BCHP_MSPI_RXRAM13                        0x004064f4 /* LSbyte for bit 16 operation only (queue pointer = 6) */
#define BCHP_MSPI_RXRAM14                        0x004064f8 /* MSbyte for bit 16 or bit 8 operation (queue pointer = 7) */
#define BCHP_MSPI_RXRAM15                        0x004064fc /* LSbyte for bit 16 operation only (queue pointer = 7) */
#define BCHP_MSPI_RXRAM16                        0x00406500 /* MSbyte for bit 16 or bit 8 operation (queue pointer = 8) */
#define BCHP_MSPI_RXRAM17                        0x00406504 /* LSbyte for bit 16 operation only (queue pointer = 8) */
#define BCHP_MSPI_RXRAM18                        0x00406508 /* MSbyte for bit 16 or bit 8 operation (queue pointer = 9) */
#define BCHP_MSPI_RXRAM19                        0x0040650c /* LSbyte for bit 16 operation only (queue pointer = 9) */
#define BCHP_MSPI_RXRAM20                        0x00406510 /* MSbyte for bit 16 or bit 8 operation (queue pointer = a) */
#define BCHP_MSPI_RXRAM21                        0x00406514 /* LSbyte for bit 16 operation only (queue pointer = a) */
#define BCHP_MSPI_RXRAM22                        0x00406518 /* MSbyte for bit 16 or bit 8 operation (queue pointer = b) */
#define BCHP_MSPI_RXRAM23                        0x0040651c /* LSbyte for bit 16 operation only (queue pointer = b) */
#define BCHP_MSPI_RXRAM24                        0x00406520 /* MSbyte for bit 16 or bit 8 operation (queue pointer = c) */
#define BCHP_MSPI_RXRAM25                        0x00406524 /* LSbyte for bit 16 operation only (queue pointer = c) */
#define BCHP_MSPI_RXRAM26                        0x00406528 /* MSbyte for bit 16 or bit 8 operation (queue pointer = d) */
#define BCHP_MSPI_RXRAM27                        0x0040652c /* LSbyte for bit 16 operation only (queue pointer = d) */
#define BCHP_MSPI_RXRAM28                        0x00406530 /* MSbyte for bit 16 or bit 8 operation (queue pointer = e) */
#define BCHP_MSPI_RXRAM29                        0x00406534 /* LSbyte for bit 16 operation only (queue pointer = e) */
#define BCHP_MSPI_RXRAM30                        0x00406538 /* MSbyte for bit 16 or bit 8 operation (queue pointer = f) */
#define BCHP_MSPI_RXRAM31                        0x0040653c /* LSbyte for bit 16 operation only (queue pointer = f) */
#define BCHP_MSPI_CDRAM00                        0x00406540 /* 8-bit command (queue pointer = 0) */
#define BCHP_MSPI_CDRAM01                        0x00406544 /* 8-bit command (queue pointer = 1) */
#define BCHP_MSPI_CDRAM02                        0x00406548 /* 8-bit command (queue pointer = 2) */
#define BCHP_MSPI_CDRAM03                        0x0040654c /* 8-bit command (queue pointer = 3) */
#define BCHP_MSPI_CDRAM04                        0x00406550 /* 8-bit command (queue pointer = 4) */
#define BCHP_MSPI_CDRAM05                        0x00406554 /* 8-bit command (queue pointer = 5) */
#define BCHP_MSPI_CDRAM06                        0x00406558 /* 8-bit command (queue pointer = 6) */
#define BCHP_MSPI_CDRAM07                        0x0040655c /* 8-bit command (queue pointer = 7) */
#define BCHP_MSPI_CDRAM08                        0x00406560 /* 8-bit command (queue pointer = 8) */
#define BCHP_MSPI_CDRAM09                        0x00406564 /* 8-bit command (queue pointer = 9) */
#define BCHP_MSPI_CDRAM10                        0x00406568 /* 8-bit command (queue pointer = a) */
#define BCHP_MSPI_CDRAM11                        0x0040656c /* 8-bit command (queue pointer = b) */
#define BCHP_MSPI_CDRAM12                        0x00406570 /* 8-bit command (queue pointer = c) */
#define BCHP_MSPI_CDRAM13                        0x00406574 /* 8-bit command (queue pointer = d) */
#define BCHP_MSPI_CDRAM14                        0x00406578 /* 8-bit command (queue pointer = e) */
#define BCHP_MSPI_CDRAM15                        0x0040657c /* 8-bit command (queue pointer = f) */

/***************************************************************************
 *SPCR0_LSB - SPCR0_LSB REGISTER
 ***************************************************************************/
/* MSPI :: SPCR0_LSB :: reserved0 [31:08] */
#define BCHP_MSPI_SPCR0_LSB_reserved0_MASK                         0xffffff00
#define BCHP_MSPI_SPCR0_LSB_reserved0_SHIFT                        8

/* MSPI :: SPCR0_LSB :: SPBR [07:00] */
#define BCHP_MSPI_SPCR0_LSB_SPBR_MASK                              0x000000ff
#define BCHP_MSPI_SPCR0_LSB_SPBR_SHIFT                             0

/***************************************************************************
 *SPCR0_MSB - SPCR0_MSB Register
 ***************************************************************************/
/* MSPI :: SPCR0_MSB :: reserved0 [31:08] */
#define BCHP_MSPI_SPCR0_MSB_reserved0_MASK                         0xffffff00
#define BCHP_MSPI_SPCR0_MSB_reserved0_SHIFT                        8

/* MSPI :: SPCR0_MSB :: MSTR [07:07] */
#define BCHP_MSPI_SPCR0_MSB_MSTR_MASK                              0x00000080
#define BCHP_MSPI_SPCR0_MSB_MSTR_SHIFT                             7

/* MSPI :: SPCR0_MSB :: reserved1 [06:06] */
#define BCHP_MSPI_SPCR0_MSB_reserved1_MASK                         0x00000040
#define BCHP_MSPI_SPCR0_MSB_reserved1_SHIFT                        6

/* MSPI :: SPCR0_MSB :: BitS [05:02] */
#define BCHP_MSPI_SPCR0_MSB_BitS_MASK                              0x0000003c
#define BCHP_MSPI_SPCR0_MSB_BitS_SHIFT                             2

/* MSPI :: SPCR0_MSB :: CPOL [01:01] */
#define BCHP_MSPI_SPCR0_MSB_CPOL_MASK                              0x00000002
#define BCHP_MSPI_SPCR0_MSB_CPOL_SHIFT                             1

/* MSPI :: SPCR0_MSB :: CPHA [00:00] */
#define BCHP_MSPI_SPCR0_MSB_CPHA_MASK                              0x00000001
#define BCHP_MSPI_SPCR0_MSB_CPHA_SHIFT                             0

/***************************************************************************
 *SPCR1_LSB - SPCR1_LSB REGISTER
 ***************************************************************************/
/* MSPI :: SPCR1_LSB :: reserved0 [31:08] */
#define BCHP_MSPI_SPCR1_LSB_reserved0_MASK                         0xffffff00
#define BCHP_MSPI_SPCR1_LSB_reserved0_SHIFT                        8

/* MSPI :: SPCR1_LSB :: DTL [07:00] */
#define BCHP_MSPI_SPCR1_LSB_DTL_MASK                               0x000000ff
#define BCHP_MSPI_SPCR1_LSB_DTL_SHIFT                              0

/***************************************************************************
 *SPCR1_MSB - SPCR1_MSB REGISTER
 ***************************************************************************/
/* MSPI :: SPCR1_MSB :: reserved0 [31:08] */
#define BCHP_MSPI_SPCR1_MSB_reserved0_MASK                         0xffffff00
#define BCHP_MSPI_SPCR1_MSB_reserved0_SHIFT                        8

/* MSPI :: SPCR1_MSB :: RDSCLK [07:00] */
#define BCHP_MSPI_SPCR1_MSB_RDSCLK_MASK                            0x000000ff
#define BCHP_MSPI_SPCR1_MSB_RDSCLK_SHIFT                           0

/***************************************************************************
 *NEWQP - NEWQP REGISTER
 ***************************************************************************/
/* MSPI :: NEWQP :: reserved0 [31:04] */
#define BCHP_MSPI_NEWQP_reserved0_MASK                             0xfffffff0
#define BCHP_MSPI_NEWQP_reserved0_SHIFT                            4

/* MSPI :: NEWQP :: newqp [03:00] */
#define BCHP_MSPI_NEWQP_newqp_MASK                                 0x0000000f
#define BCHP_MSPI_NEWQP_newqp_SHIFT                                0

/***************************************************************************
 *ENDQP - ENDQP REGISTER
 ***************************************************************************/
/* MSPI :: ENDQP :: reserved0 [31:04] */
#define BCHP_MSPI_ENDQP_reserved0_MASK                             0xfffffff0
#define BCHP_MSPI_ENDQP_reserved0_SHIFT                            4

/* MSPI :: ENDQP :: endqp [03:00] */
#define BCHP_MSPI_ENDQP_endqp_MASK                                 0x0000000f
#define BCHP_MSPI_ENDQP_endqp_SHIFT                                0

/***************************************************************************
 *SPCR2 - SPCR2 REGISTER
 ***************************************************************************/
/* MSPI :: SPCR2 :: reserved0 [31:08] */
#define BCHP_MSPI_SPCR2_reserved0_MASK                             0xffffff00
#define BCHP_MSPI_SPCR2_reserved0_SHIFT                            8

/* MSPI :: SPCR2 :: cont_after_cmd [07:07] */
#define BCHP_MSPI_SPCR2_cont_after_cmd_MASK                        0x00000080
#define BCHP_MSPI_SPCR2_cont_after_cmd_SHIFT                       7

/* MSPI :: SPCR2 :: spe [06:06] */
#define BCHP_MSPI_SPCR2_spe_MASK                                   0x00000040
#define BCHP_MSPI_SPCR2_spe_SHIFT                                  6

/* MSPI :: SPCR2 :: spifie [05:05] */
#define BCHP_MSPI_SPCR2_spifie_MASK                                0x00000020
#define BCHP_MSPI_SPCR2_spifie_SHIFT                               5

/* MSPI :: SPCR2 :: wren [04:04] */
#define BCHP_MSPI_SPCR2_wren_MASK                                  0x00000010
#define BCHP_MSPI_SPCR2_wren_SHIFT                                 4

/* MSPI :: SPCR2 :: wrt0 [03:03] */
#define BCHP_MSPI_SPCR2_wrt0_MASK                                  0x00000008
#define BCHP_MSPI_SPCR2_wrt0_SHIFT                                 3

/* MSPI :: SPCR2 :: loopq [02:02] */
#define BCHP_MSPI_SPCR2_loopq_MASK                                 0x00000004
#define BCHP_MSPI_SPCR2_loopq_SHIFT                                2

/* MSPI :: SPCR2 :: hie [01:01] */
#define BCHP_MSPI_SPCR2_hie_MASK                                   0x00000002
#define BCHP_MSPI_SPCR2_hie_SHIFT                                  1

/* MSPI :: SPCR2 :: halt [00:00] */
#define BCHP_MSPI_SPCR2_halt_MASK                                  0x00000001
#define BCHP_MSPI_SPCR2_halt_SHIFT                                 0

/***************************************************************************
 *MSPI_STATUS - MSPI STATUS REGISTER
 ***************************************************************************/
/* MSPI :: MSPI_STATUS :: reserved0 [31:02] */
#define BCHP_MSPI_MSPI_STATUS_reserved0_MASK                       0xfffffffc
#define BCHP_MSPI_MSPI_STATUS_reserved0_SHIFT                      2

/* MSPI :: MSPI_STATUS :: HALTA [01:01] */
#define BCHP_MSPI_MSPI_STATUS_HALTA_MASK                           0x00000002
#define BCHP_MSPI_MSPI_STATUS_HALTA_SHIFT                          1

/* MSPI :: MSPI_STATUS :: SPIF [00:00] */
#define BCHP_MSPI_MSPI_STATUS_SPIF_MASK                            0x00000001
#define BCHP_MSPI_MSPI_STATUS_SPIF_SHIFT                           0

/***************************************************************************
 *CPTQP - CPTQP REGISTER
 ***************************************************************************/
/* MSPI :: CPTQP :: reserved0 [31:04] */
#define BCHP_MSPI_CPTQP_reserved0_MASK                             0xfffffff0
#define BCHP_MSPI_CPTQP_reserved0_SHIFT                            4

/* MSPI :: CPTQP :: cptqp [03:00] */
#define BCHP_MSPI_CPTQP_cptqp_MASK                                 0x0000000f
#define BCHP_MSPI_CPTQP_cptqp_SHIFT                                0

/***************************************************************************
 *TXRAM00 - MSbyte for bit 16 or bit 8 operation (queue pointer = 0)
 ***************************************************************************/
/* MSPI :: TXRAM00 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM00_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM00_reserved0_SHIFT                          8

/* MSPI :: TXRAM00 :: txram [07:00] */
#define BCHP_MSPI_TXRAM00_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM00_txram_SHIFT                              0

/***************************************************************************
 *TXRAM01 - LSbyte for bit 16 operation only (queue pointer = 0)
 ***************************************************************************/
/* MSPI :: TXRAM01 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM01_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM01_reserved0_SHIFT                          8

/* MSPI :: TXRAM01 :: txram [07:00] */
#define BCHP_MSPI_TXRAM01_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM01_txram_SHIFT                              0

/***************************************************************************
 *TXRAM02 - MSbyte for bit 16 or bit 8 operation (queue pointer = 1)
 ***************************************************************************/
/* MSPI :: TXRAM02 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM02_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM02_reserved0_SHIFT                          8

/* MSPI :: TXRAM02 :: txram [07:00] */
#define BCHP_MSPI_TXRAM02_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM02_txram_SHIFT                              0

/***************************************************************************
 *TXRAM03 - LSbyte for bit 16 operation only (queue pointer = 1)
 ***************************************************************************/
/* MSPI :: TXRAM03 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM03_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM03_reserved0_SHIFT                          8

/* MSPI :: TXRAM03 :: txram [07:00] */
#define BCHP_MSPI_TXRAM03_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM03_txram_SHIFT                              0

/***************************************************************************
 *TXRAM04 - MSbyte for bit 16 or bit 8 operation (queue pointer = 2)
 ***************************************************************************/
/* MSPI :: TXRAM04 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM04_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM04_reserved0_SHIFT                          8

/* MSPI :: TXRAM04 :: txram [07:00] */
#define BCHP_MSPI_TXRAM04_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM04_txram_SHIFT                              0

/***************************************************************************
 *TXRAM05 - LSbyte for bit 16 operation only (queue pointer = 2)
 ***************************************************************************/
/* MSPI :: TXRAM05 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM05_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM05_reserved0_SHIFT                          8

/* MSPI :: TXRAM05 :: txram [07:00] */
#define BCHP_MSPI_TXRAM05_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM05_txram_SHIFT                              0

/***************************************************************************
 *TXRAM06 - MSbyte for bit 16 or bit 8 operation (queue pointer = 3)
 ***************************************************************************/
/* MSPI :: TXRAM06 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM06_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM06_reserved0_SHIFT                          8

/* MSPI :: TXRAM06 :: txram [07:00] */
#define BCHP_MSPI_TXRAM06_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM06_txram_SHIFT                              0

/***************************************************************************
 *TXRAM07 - LSbyte for bit 16 operation only (queue pointer = 3)
 ***************************************************************************/
/* MSPI :: TXRAM07 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM07_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM07_reserved0_SHIFT                          8

/* MSPI :: TXRAM07 :: txram [07:00] */
#define BCHP_MSPI_TXRAM07_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM07_txram_SHIFT                              0

/***************************************************************************
 *TXRAM08 - MSbyte for bit 16 or bit 8 operation (queue pointer = 4)
 ***************************************************************************/
/* MSPI :: TXRAM08 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM08_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM08_reserved0_SHIFT                          8

/* MSPI :: TXRAM08 :: txram [07:00] */
#define BCHP_MSPI_TXRAM08_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM08_txram_SHIFT                              0

/***************************************************************************
 *TXRAM09 - LSbyte for bit 16 operation only (queue pointer = 4)
 ***************************************************************************/
/* MSPI :: TXRAM09 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM09_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM09_reserved0_SHIFT                          8

/* MSPI :: TXRAM09 :: txram [07:00] */
#define BCHP_MSPI_TXRAM09_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM09_txram_SHIFT                              0

/***************************************************************************
 *TXRAM10 - MSbyte for bit 16 or bit 8 operation (queue pointer = 5)
 ***************************************************************************/
/* MSPI :: TXRAM10 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM10_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM10_reserved0_SHIFT                          8

/* MSPI :: TXRAM10 :: txram [07:00] */
#define BCHP_MSPI_TXRAM10_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM10_txram_SHIFT                              0

/***************************************************************************
 *TXRAM11 - LSbyte for bit 16 operation only (queue pointer = 5)
 ***************************************************************************/
/* MSPI :: TXRAM11 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM11_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM11_reserved0_SHIFT                          8

/* MSPI :: TXRAM11 :: txram [07:00] */
#define BCHP_MSPI_TXRAM11_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM11_txram_SHIFT                              0

/***************************************************************************
 *TXRAM12 - MSbyte for bit 16 or bit 8 operation (queue pointer = 6)
 ***************************************************************************/
/* MSPI :: TXRAM12 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM12_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM12_reserved0_SHIFT                          8

/* MSPI :: TXRAM12 :: txram [07:00] */
#define BCHP_MSPI_TXRAM12_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM12_txram_SHIFT                              0

/***************************************************************************
 *TXRAM13 - LSbyte for bit 16 operation only (queue pointer = 6)
 ***************************************************************************/
/* MSPI :: TXRAM13 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM13_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM13_reserved0_SHIFT                          8

/* MSPI :: TXRAM13 :: txram [07:00] */
#define BCHP_MSPI_TXRAM13_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM13_txram_SHIFT                              0

/***************************************************************************
 *TXRAM14 - MSbyte for bit 16 or bit 8 operation (queue pointer = 7)
 ***************************************************************************/
/* MSPI :: TXRAM14 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM14_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM14_reserved0_SHIFT                          8

/* MSPI :: TXRAM14 :: txram [07:00] */
#define BCHP_MSPI_TXRAM14_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM14_txram_SHIFT                              0

/***************************************************************************
 *TXRAM15 - LSbyte for bit 16 operation only (queue pointer = 7)
 ***************************************************************************/
/* MSPI :: TXRAM15 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM15_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM15_reserved0_SHIFT                          8

/* MSPI :: TXRAM15 :: txram [07:00] */
#define BCHP_MSPI_TXRAM15_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM15_txram_SHIFT                              0

/***************************************************************************
 *TXRAM16 - MSbyte for bit 16 or bit 8 operation (queue pointer = 8)
 ***************************************************************************/
/* MSPI :: TXRAM16 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM16_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM16_reserved0_SHIFT                          8

/* MSPI :: TXRAM16 :: txram [07:00] */
#define BCHP_MSPI_TXRAM16_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM16_txram_SHIFT                              0

/***************************************************************************
 *TXRAM17 - LSbyte for bit 16 operation only (queue pointer = 8)
 ***************************************************************************/
/* MSPI :: TXRAM17 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM17_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM17_reserved0_SHIFT                          8

/* MSPI :: TXRAM17 :: txram [07:00] */
#define BCHP_MSPI_TXRAM17_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM17_txram_SHIFT                              0

/***************************************************************************
 *TXRAM18 - MSbyte for bit 16 or bit 8 operation (queue pointer = 9)
 ***************************************************************************/
/* MSPI :: TXRAM18 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM18_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM18_reserved0_SHIFT                          8

/* MSPI :: TXRAM18 :: txram [07:00] */
#define BCHP_MSPI_TXRAM18_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM18_txram_SHIFT                              0

/***************************************************************************
 *TXRAM19 - LSbyte for bit 16 operation only (queue pointer = 9)
 ***************************************************************************/
/* MSPI :: TXRAM19 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM19_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM19_reserved0_SHIFT                          8

/* MSPI :: TXRAM19 :: txram [07:00] */
#define BCHP_MSPI_TXRAM19_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM19_txram_SHIFT                              0

/***************************************************************************
 *TXRAM20 - MSbyte for bit 16 or bit 8 operation (queue pointer = a)
 ***************************************************************************/
/* MSPI :: TXRAM20 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM20_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM20_reserved0_SHIFT                          8

/* MSPI :: TXRAM20 :: txram [07:00] */
#define BCHP_MSPI_TXRAM20_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM20_txram_SHIFT                              0

/***************************************************************************
 *TXRAM21 - LSbyte for bit 16 operation only (queue pointer = a)
 ***************************************************************************/
/* MSPI :: TXRAM21 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM21_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM21_reserved0_SHIFT                          8

/* MSPI :: TXRAM21 :: txram [07:00] */
#define BCHP_MSPI_TXRAM21_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM21_txram_SHIFT                              0

/***************************************************************************
 *TXRAM22 - MSbyte for bit 16 or bit 8 operation (queue pointer = b)
 ***************************************************************************/
/* MSPI :: TXRAM22 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM22_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM22_reserved0_SHIFT                          8

/* MSPI :: TXRAM22 :: txram [07:00] */
#define BCHP_MSPI_TXRAM22_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM22_txram_SHIFT                              0

/***************************************************************************
 *TXRAM23 - LSbyte for bit 16 operation only (queue pointer = b)
 ***************************************************************************/
/* MSPI :: TXRAM23 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM23_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM23_reserved0_SHIFT                          8

/* MSPI :: TXRAM23 :: txram [07:00] */
#define BCHP_MSPI_TXRAM23_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM23_txram_SHIFT                              0

/***************************************************************************
 *TXRAM24 - MSbyte for bit 16 or bit 8 operation (queue pointer = c)
 ***************************************************************************/
/* MSPI :: TXRAM24 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM24_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM24_reserved0_SHIFT                          8

/* MSPI :: TXRAM24 :: txram [07:00] */
#define BCHP_MSPI_TXRAM24_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM24_txram_SHIFT                              0

/***************************************************************************
 *TXRAM25 - LSbyte for bit 16 operation only (queue pointer = c)
 ***************************************************************************/
/* MSPI :: TXRAM25 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM25_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM25_reserved0_SHIFT                          8

/* MSPI :: TXRAM25 :: txram [07:00] */
#define BCHP_MSPI_TXRAM25_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM25_txram_SHIFT                              0

/***************************************************************************
 *TXRAM26 - MSbyte for bit 16 or bit 8 operation (queue pointer = d)
 ***************************************************************************/
/* MSPI :: TXRAM26 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM26_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM26_reserved0_SHIFT                          8

/* MSPI :: TXRAM26 :: txram [07:00] */
#define BCHP_MSPI_TXRAM26_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM26_txram_SHIFT                              0

/***************************************************************************
 *TXRAM27 - LSbyte for bit 16 operation only (queue pointer = d)
 ***************************************************************************/
/* MSPI :: TXRAM27 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM27_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM27_reserved0_SHIFT                          8

/* MSPI :: TXRAM27 :: txram [07:00] */
#define BCHP_MSPI_TXRAM27_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM27_txram_SHIFT                              0

/***************************************************************************
 *TXRAM28 - MSbyte for bit 16 or bit 8 operation (queue pointer = e)
 ***************************************************************************/
/* MSPI :: TXRAM28 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM28_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM28_reserved0_SHIFT                          8

/* MSPI :: TXRAM28 :: txram [07:00] */
#define BCHP_MSPI_TXRAM28_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM28_txram_SHIFT                              0

/***************************************************************************
 *TXRAM29 - LSbyte for bit 16 operation only (queue pointer = e)
 ***************************************************************************/
/* MSPI :: TXRAM29 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM29_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM29_reserved0_SHIFT                          8

/* MSPI :: TXRAM29 :: txram [07:00] */
#define BCHP_MSPI_TXRAM29_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM29_txram_SHIFT                              0

/***************************************************************************
 *TXRAM30 - MSbyte for bit 16 or bit 8 operation (queue pointer = f)
 ***************************************************************************/
/* MSPI :: TXRAM30 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM30_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM30_reserved0_SHIFT                          8

/* MSPI :: TXRAM30 :: txram [07:00] */
#define BCHP_MSPI_TXRAM30_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM30_txram_SHIFT                              0

/***************************************************************************
 *TXRAM31 - LSbyte for bit 16 operation only (queue pointer = f)
 ***************************************************************************/
/* MSPI :: TXRAM31 :: reserved0 [31:08] */
#define BCHP_MSPI_TXRAM31_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_TXRAM31_reserved0_SHIFT                          8

/* MSPI :: TXRAM31 :: txram [07:00] */
#define BCHP_MSPI_TXRAM31_txram_MASK                               0x000000ff
#define BCHP_MSPI_TXRAM31_txram_SHIFT                              0

/***************************************************************************
 *RXRAM00 - MSbyte for bit 16 or bit 8 operation (queue pointer = 0)
 ***************************************************************************/
/* MSPI :: RXRAM00 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM00_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM00_reserved0_SHIFT                          8

/* MSPI :: RXRAM00 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM00_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM00_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM01 - LSbyte for bit 16 operation only (queue pointer = 0)
 ***************************************************************************/
/* MSPI :: RXRAM01 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM01_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM01_reserved0_SHIFT                          8

/* MSPI :: RXRAM01 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM01_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM01_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM02 - MSbyte for bit 16 or bit 8 operation (queue pointer = 1)
 ***************************************************************************/
/* MSPI :: RXRAM02 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM02_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM02_reserved0_SHIFT                          8

/* MSPI :: RXRAM02 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM02_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM02_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM03 - LSbyte for bit 16 operation only (queue pointer = 1)
 ***************************************************************************/
/* MSPI :: RXRAM03 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM03_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM03_reserved0_SHIFT                          8

/* MSPI :: RXRAM03 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM03_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM03_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM04 - MSbyte for bit 16 or bit 8 operation (queue pointer = 2)
 ***************************************************************************/
/* MSPI :: RXRAM04 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM04_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM04_reserved0_SHIFT                          8

/* MSPI :: RXRAM04 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM04_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM04_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM05 - LSbyte for bit 16 operation only (queue pointer = 2)
 ***************************************************************************/
/* MSPI :: RXRAM05 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM05_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM05_reserved0_SHIFT                          8

/* MSPI :: RXRAM05 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM05_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM05_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM06 - MSbyte for bit 16 or bit 8 operation (queue pointer = 3)
 ***************************************************************************/
/* MSPI :: RXRAM06 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM06_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM06_reserved0_SHIFT                          8

/* MSPI :: RXRAM06 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM06_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM06_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM07 - LSbyte for bit 16 operation only (queue pointer = 3)
 ***************************************************************************/
/* MSPI :: RXRAM07 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM07_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM07_reserved0_SHIFT                          8

/* MSPI :: RXRAM07 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM07_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM07_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM08 - MSbyte for bit 16 or bit 8 operation (queue pointer = 4)
 ***************************************************************************/
/* MSPI :: RXRAM08 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM08_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM08_reserved0_SHIFT                          8

/* MSPI :: RXRAM08 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM08_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM08_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM09 - LSbyte for bit 16 operation only (queue pointer = 4)
 ***************************************************************************/
/* MSPI :: RXRAM09 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM09_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM09_reserved0_SHIFT                          8

/* MSPI :: RXRAM09 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM09_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM09_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM10 - MSbyte for bit 16 or bit 8 operation (queue pointer = 5)
 ***************************************************************************/
/* MSPI :: RXRAM10 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM10_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM10_reserved0_SHIFT                          8

/* MSPI :: RXRAM10 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM10_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM10_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM11 - LSbyte for bit 16 operation only (queue pointer = 5)
 ***************************************************************************/
/* MSPI :: RXRAM11 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM11_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM11_reserved0_SHIFT                          8

/* MSPI :: RXRAM11 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM11_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM11_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM12 - MSbyte for bit 16 or bit 8 operation (queue pointer = 6)
 ***************************************************************************/
/* MSPI :: RXRAM12 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM12_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM12_reserved0_SHIFT                          8

/* MSPI :: RXRAM12 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM12_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM12_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM13 - LSbyte for bit 16 operation only (queue pointer = 6)
 ***************************************************************************/
/* MSPI :: RXRAM13 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM13_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM13_reserved0_SHIFT                          8

/* MSPI :: RXRAM13 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM13_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM13_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM14 - MSbyte for bit 16 or bit 8 operation (queue pointer = 7)
 ***************************************************************************/
/* MSPI :: RXRAM14 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM14_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM14_reserved0_SHIFT                          8

/* MSPI :: RXRAM14 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM14_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM14_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM15 - LSbyte for bit 16 operation only (queue pointer = 7)
 ***************************************************************************/
/* MSPI :: RXRAM15 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM15_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM15_reserved0_SHIFT                          8

/* MSPI :: RXRAM15 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM15_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM15_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM16 - MSbyte for bit 16 or bit 8 operation (queue pointer = 8)
 ***************************************************************************/
/* MSPI :: RXRAM16 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM16_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM16_reserved0_SHIFT                          8

/* MSPI :: RXRAM16 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM16_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM16_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM17 - LSbyte for bit 16 operation only (queue pointer = 8)
 ***************************************************************************/
/* MSPI :: RXRAM17 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM17_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM17_reserved0_SHIFT                          8

/* MSPI :: RXRAM17 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM17_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM17_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM18 - MSbyte for bit 16 or bit 8 operation (queue pointer = 9)
 ***************************************************************************/
/* MSPI :: RXRAM18 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM18_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM18_reserved0_SHIFT                          8

/* MSPI :: RXRAM18 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM18_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM18_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM19 - LSbyte for bit 16 operation only (queue pointer = 9)
 ***************************************************************************/
/* MSPI :: RXRAM19 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM19_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM19_reserved0_SHIFT                          8

/* MSPI :: RXRAM19 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM19_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM19_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM20 - MSbyte for bit 16 or bit 8 operation (queue pointer = a)
 ***************************************************************************/
/* MSPI :: RXRAM20 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM20_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM20_reserved0_SHIFT                          8

/* MSPI :: RXRAM20 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM20_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM20_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM21 - LSbyte for bit 16 operation only (queue pointer = a)
 ***************************************************************************/
/* MSPI :: RXRAM21 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM21_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM21_reserved0_SHIFT                          8

/* MSPI :: RXRAM21 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM21_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM21_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM22 - MSbyte for bit 16 or bit 8 operation (queue pointer = b)
 ***************************************************************************/
/* MSPI :: RXRAM22 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM22_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM22_reserved0_SHIFT                          8

/* MSPI :: RXRAM22 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM22_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM22_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM23 - LSbyte for bit 16 operation only (queue pointer = b)
 ***************************************************************************/
/* MSPI :: RXRAM23 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM23_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM23_reserved0_SHIFT                          8

/* MSPI :: RXRAM23 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM23_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM23_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM24 - MSbyte for bit 16 or bit 8 operation (queue pointer = c)
 ***************************************************************************/
/* MSPI :: RXRAM24 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM24_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM24_reserved0_SHIFT                          8

/* MSPI :: RXRAM24 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM24_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM24_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM25 - LSbyte for bit 16 operation only (queue pointer = c)
 ***************************************************************************/
/* MSPI :: RXRAM25 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM25_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM25_reserved0_SHIFT                          8

/* MSPI :: RXRAM25 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM25_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM25_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM26 - MSbyte for bit 16 or bit 8 operation (queue pointer = d)
 ***************************************************************************/
/* MSPI :: RXRAM26 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM26_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM26_reserved0_SHIFT                          8

/* MSPI :: RXRAM26 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM26_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM26_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM27 - LSbyte for bit 16 operation only (queue pointer = d)
 ***************************************************************************/
/* MSPI :: RXRAM27 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM27_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM27_reserved0_SHIFT                          8

/* MSPI :: RXRAM27 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM27_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM27_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM28 - MSbyte for bit 16 or bit 8 operation (queue pointer = e)
 ***************************************************************************/
/* MSPI :: RXRAM28 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM28_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM28_reserved0_SHIFT                          8

/* MSPI :: RXRAM28 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM28_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM28_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM29 - LSbyte for bit 16 operation only (queue pointer = e)
 ***************************************************************************/
/* MSPI :: RXRAM29 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM29_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM29_reserved0_SHIFT                          8

/* MSPI :: RXRAM29 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM29_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM29_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM30 - MSbyte for bit 16 or bit 8 operation (queue pointer = f)
 ***************************************************************************/
/* MSPI :: RXRAM30 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM30_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM30_reserved0_SHIFT                          8

/* MSPI :: RXRAM30 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM30_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM30_rxram_SHIFT                              0

/***************************************************************************
 *RXRAM31 - LSbyte for bit 16 operation only (queue pointer = f)
 ***************************************************************************/
/* MSPI :: RXRAM31 :: reserved0 [31:08] */
#define BCHP_MSPI_RXRAM31_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_RXRAM31_reserved0_SHIFT                          8

/* MSPI :: RXRAM31 :: rxram [07:00] */
#define BCHP_MSPI_RXRAM31_rxram_MASK                               0x000000ff
#define BCHP_MSPI_RXRAM31_rxram_SHIFT                              0

/***************************************************************************
 *CDRAM00 - 8-bit command (queue pointer = 0)
 ***************************************************************************/
/* MSPI :: CDRAM00 :: reserved0 [31:08] */
#define BCHP_MSPI_CDRAM00_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_CDRAM00_reserved0_SHIFT                          8

/* MSPI :: CDRAM00 :: cdram [07:00] */
#define BCHP_MSPI_CDRAM00_cdram_MASK                               0x000000ff
#define BCHP_MSPI_CDRAM00_cdram_SHIFT                              0

/***************************************************************************
 *CDRAM01 - 8-bit command (queue pointer = 1)
 ***************************************************************************/
/* MSPI :: CDRAM01 :: reserved0 [31:08] */
#define BCHP_MSPI_CDRAM01_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_CDRAM01_reserved0_SHIFT                          8

/* MSPI :: CDRAM01 :: cdram [07:00] */
#define BCHP_MSPI_CDRAM01_cdram_MASK                               0x000000ff
#define BCHP_MSPI_CDRAM01_cdram_SHIFT                              0

/***************************************************************************
 *CDRAM02 - 8-bit command (queue pointer = 2)
 ***************************************************************************/
/* MSPI :: CDRAM02 :: reserved0 [31:08] */
#define BCHP_MSPI_CDRAM02_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_CDRAM02_reserved0_SHIFT                          8

/* MSPI :: CDRAM02 :: cdram [07:00] */
#define BCHP_MSPI_CDRAM02_cdram_MASK                               0x000000ff
#define BCHP_MSPI_CDRAM02_cdram_SHIFT                              0

/***************************************************************************
 *CDRAM03 - 8-bit command (queue pointer = 3)
 ***************************************************************************/
/* MSPI :: CDRAM03 :: reserved0 [31:08] */
#define BCHP_MSPI_CDRAM03_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_CDRAM03_reserved0_SHIFT                          8

/* MSPI :: CDRAM03 :: cdram [07:00] */
#define BCHP_MSPI_CDRAM03_cdram_MASK                               0x000000ff
#define BCHP_MSPI_CDRAM03_cdram_SHIFT                              0

/***************************************************************************
 *CDRAM04 - 8-bit command (queue pointer = 4)
 ***************************************************************************/
/* MSPI :: CDRAM04 :: reserved0 [31:08] */
#define BCHP_MSPI_CDRAM04_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_CDRAM04_reserved0_SHIFT                          8

/* MSPI :: CDRAM04 :: cdram [07:00] */
#define BCHP_MSPI_CDRAM04_cdram_MASK                               0x000000ff
#define BCHP_MSPI_CDRAM04_cdram_SHIFT                              0

/***************************************************************************
 *CDRAM05 - 8-bit command (queue pointer = 5)
 ***************************************************************************/
/* MSPI :: CDRAM05 :: reserved0 [31:08] */
#define BCHP_MSPI_CDRAM05_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_CDRAM05_reserved0_SHIFT                          8

/* MSPI :: CDRAM05 :: cdram [07:00] */
#define BCHP_MSPI_CDRAM05_cdram_MASK                               0x000000ff
#define BCHP_MSPI_CDRAM05_cdram_SHIFT                              0

/***************************************************************************
 *CDRAM06 - 8-bit command (queue pointer = 6)
 ***************************************************************************/
/* MSPI :: CDRAM06 :: reserved0 [31:08] */
#define BCHP_MSPI_CDRAM06_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_CDRAM06_reserved0_SHIFT                          8

/* MSPI :: CDRAM06 :: cdram [07:00] */
#define BCHP_MSPI_CDRAM06_cdram_MASK                               0x000000ff
#define BCHP_MSPI_CDRAM06_cdram_SHIFT                              0

/***************************************************************************
 *CDRAM07 - 8-bit command (queue pointer = 7)
 ***************************************************************************/
/* MSPI :: CDRAM07 :: reserved0 [31:08] */
#define BCHP_MSPI_CDRAM07_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_CDRAM07_reserved0_SHIFT                          8

/* MSPI :: CDRAM07 :: cdram [07:00] */
#define BCHP_MSPI_CDRAM07_cdram_MASK                               0x000000ff
#define BCHP_MSPI_CDRAM07_cdram_SHIFT                              0

/***************************************************************************
 *CDRAM08 - 8-bit command (queue pointer = 8)
 ***************************************************************************/
/* MSPI :: CDRAM08 :: reserved0 [31:08] */
#define BCHP_MSPI_CDRAM08_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_CDRAM08_reserved0_SHIFT                          8

/* MSPI :: CDRAM08 :: cdram [07:00] */
#define BCHP_MSPI_CDRAM08_cdram_MASK                               0x000000ff
#define BCHP_MSPI_CDRAM08_cdram_SHIFT                              0

/***************************************************************************
 *CDRAM09 - 8-bit command (queue pointer = 9)
 ***************************************************************************/
/* MSPI :: CDRAM09 :: reserved0 [31:08] */
#define BCHP_MSPI_CDRAM09_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_CDRAM09_reserved0_SHIFT                          8

/* MSPI :: CDRAM09 :: cdram [07:00] */
#define BCHP_MSPI_CDRAM09_cdram_MASK                               0x000000ff
#define BCHP_MSPI_CDRAM09_cdram_SHIFT                              0

/***************************************************************************
 *CDRAM10 - 8-bit command (queue pointer = a)
 ***************************************************************************/
/* MSPI :: CDRAM10 :: reserved0 [31:08] */
#define BCHP_MSPI_CDRAM10_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_CDRAM10_reserved0_SHIFT                          8

/* MSPI :: CDRAM10 :: cdram [07:00] */
#define BCHP_MSPI_CDRAM10_cdram_MASK                               0x000000ff
#define BCHP_MSPI_CDRAM10_cdram_SHIFT                              0

/***************************************************************************
 *CDRAM11 - 8-bit command (queue pointer = b)
 ***************************************************************************/
/* MSPI :: CDRAM11 :: reserved0 [31:08] */
#define BCHP_MSPI_CDRAM11_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_CDRAM11_reserved0_SHIFT                          8

/* MSPI :: CDRAM11 :: cdram [07:00] */
#define BCHP_MSPI_CDRAM11_cdram_MASK                               0x000000ff
#define BCHP_MSPI_CDRAM11_cdram_SHIFT                              0

/***************************************************************************
 *CDRAM12 - 8-bit command (queue pointer = c)
 ***************************************************************************/
/* MSPI :: CDRAM12 :: reserved0 [31:08] */
#define BCHP_MSPI_CDRAM12_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_CDRAM12_reserved0_SHIFT                          8

/* MSPI :: CDRAM12 :: cdram [07:00] */
#define BCHP_MSPI_CDRAM12_cdram_MASK                               0x000000ff
#define BCHP_MSPI_CDRAM12_cdram_SHIFT                              0

/***************************************************************************
 *CDRAM13 - 8-bit command (queue pointer = d)
 ***************************************************************************/
/* MSPI :: CDRAM13 :: reserved0 [31:08] */
#define BCHP_MSPI_CDRAM13_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_CDRAM13_reserved0_SHIFT                          8

/* MSPI :: CDRAM13 :: cdram [07:00] */
#define BCHP_MSPI_CDRAM13_cdram_MASK                               0x000000ff
#define BCHP_MSPI_CDRAM13_cdram_SHIFT                              0

/***************************************************************************
 *CDRAM14 - 8-bit command (queue pointer = e)
 ***************************************************************************/
/* MSPI :: CDRAM14 :: reserved0 [31:08] */
#define BCHP_MSPI_CDRAM14_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_CDRAM14_reserved0_SHIFT                          8

/* MSPI :: CDRAM14 :: cdram [07:00] */
#define BCHP_MSPI_CDRAM14_cdram_MASK                               0x000000ff
#define BCHP_MSPI_CDRAM14_cdram_SHIFT                              0

/***************************************************************************
 *CDRAM15 - 8-bit command (queue pointer = f)
 ***************************************************************************/
/* MSPI :: CDRAM15 :: reserved0 [31:08] */
#define BCHP_MSPI_CDRAM15_reserved0_MASK                           0xffffff00
#define BCHP_MSPI_CDRAM15_reserved0_SHIFT                          8

/* MSPI :: CDRAM15 :: cdram [07:00] */
#define BCHP_MSPI_CDRAM15_cdram_MASK                               0x000000ff
#define BCHP_MSPI_CDRAM15_cdram_SHIFT                              0

#endif /* #ifndef BCHP_MSPI_H__ */

/* End of File */
